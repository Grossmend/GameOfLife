
function game_of_life

clear
close all
clc

% размер решетки
xCount = 10;
yCount = 10;

% инициализируем клетки
mat = zeros(xCount, yCount);
% cells = vec2mat((1:1:100), 10, 10);
% генерируем случайные точки
idx = randsample(numel(mat), numel(mat)/10);
mat(idx) = 1;
showCells(mat);

% Rules
for i=1:1
    % следующее поколение
    cellsNew = findNeighbor(mat);
    % обновление
    mat = cellsNew;
    % визуализация
    showCells(mat);
end

end


function matNew = findNeighbor(m)

% обновление границ

% инициализируем новую вселенную с бесконечными полями
matInf = zeros(size(m)+2);

% добавляем вокруг начальной матрицы еще один слой клеток
matInf(2:end-1, 2:end-1) = m;
% добавляем низ матрицы наверх нового слоя
matInf(1, 2:end-1) = m(end, :);
% добавляем вверх матрицы вниз нового слоя
matInf(end, 2:end-1) = m(1, :);
% добавляем правую сторону матрицы влево нового слоя
matInf(2:end-1, 1) = m(:, end);
% добавляем левую сторону матрицы вправо нового слоя 
matInf(2:end-1, end) = m(:, 1);

% обновление углов

% добавляем нижний правый угол в верхний левый нового слоя
matInf(1, 1) = m(end, end);
% добавляем нижний левый угол в верхний правый нового слоя
matInf(1, end) = m(end, 1);
% добавляем верхний правый угол в левый нижний нового слоя
matInf(end, 1) = m(1, end);
% добавляем верхний левый угол в правый нижний нового слоя
matInf(end, end) = m(1, 1);

[nelx, nely] = size(m);

matNew = zeros(size(m));

% цикл по каждой клетке на поле
idx = 0;

for yInf = 2:nely+1
    for xInf = 2:nelx+1
        
        idx = idx + 1;
        
        yTest = yInf-2;
        xTest = 
        
        disp(num2str([idx, yInf, xInf]))
        
        % считаем сумму соседей каждой клетки (узкое место программы)
        count = sum(sum(matInf(xInf-1:xInf+1, yInf-1:yInf+1))) - m(idx);
        
        % Правило 1: Если клетка жива и у нее соседей меньше двух, то она умирает от
        % одиночества
        if (m(idx) == 1) && (count < 2)
            matNew(idx) = 0;
        end
        
        % Правило 2: Если клетка жива и у нее 2 или 3 соседа, то она
        % остается жить
        if (m(idx) == 1) && ((count == 2) || (count == 3))
            matNew(idx) = 1;
        end
        
        % Правило 3: Если клетка жива и у нее больше 3 соседей, то она
        % умирает от перенаселенности
        if (m(idx) == 1) && (count > 3)
            matNew(idx) = 0;
        end
        
        % Правило 4: Если клетка мертва и у нее 3 соседей, то в ней зарождается жизнь
        if (m(idx) == 0) && (count == 3)
            matNew(idx) = 1;
        end
        
    end
end

end

function showCells(cells)

% визуализация
imagesc(cells); caxis([0 1]);
colormap(flipud(gray));
axis off;
axis equal;
drawnow

end


